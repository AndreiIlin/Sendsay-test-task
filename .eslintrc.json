{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "standard-with-typescript",
    "plugin:react-hooks/recommended",
    "eslint:recommended",
    "plugin:prettier/recommended",
    "prettier",
    "react-app"
  ],
  "ignorePatterns": [
    "**/*.css",
    "**/*.scss",
    "**/*.svg",
    "**/*.md",
    "**/*.json"
  ],
  "overrides": [
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    "no-console": "error",
    "no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "varsIgnorePattern": "React"
      }
    ],
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off",
    // allow jsx syntax in js files (for next.js project)
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    //should add ".ts" if typescript project
    "react-hooks/exhaustive-deps": "warn",
    // error, warn
    // https://eslint.org/docs/latest/rules/padding-line-between-statements
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "semi": [
      "error",
      "always"
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "pathGroups": [
          {
            "pattern": "react*",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "*",
            "group": "builtin",
            "position": "after"
          },
          {
            "pattern": "processes/**",
            "group": "sibling"
          },
          {
            "pattern": "pages/**",
            "group": "sibling"
          },
          {
            "pattern": "widgets/**",
            "group": "sibling"
          },
          {
            "pattern": "features/**",
            "group": "sibling"
          },
          {
            "pattern": "entities/**",
            "group": "sibling",
            "position": "after"
          },
          {
            "pattern": "shared/**",
            "group": "sibling",
            "position": "after"
          },
          {
            "pattern": "./**",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "@*/**",
            "group": "builtin",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "internal",
          "index"
        ]
      }
    ],
    "max-len": [
      "error",
      {
        "code": 140,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreComments": true,
        "ignorePattern": "d=\"([\\s\\S]*?)\""
      }
    ],
    "react/prop-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "react/display-name": "off",
    "react-hooks/rules-of-hooks": "off",
    " @typescript-eslint/no-invalid-void-type": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "react-hooks/exhaustive-deps": "off",
    "@typescript-eslint/no-invalid-void-type": "off"
  }
}
